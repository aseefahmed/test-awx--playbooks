vmware_vmname: d-ap-minio-01
vmware_domain: barfoot.co.nz
vmware_network: Dev
vmware_ip: 10.150.255.8
vmware_team: Infrastructure
vmware_annotation: Minio server for centralised storage of production DB backups for dev test and staging environments
vmware_template_name: template-ubuntu-2004-server-base
vmware_num_cpus: "2"
vmware_memory_gb: 4
vmware_disk_gb: "500"
vmware_folder: /Development
vmware_datacentre: DC02
vmware_datastore: DC02-SSD-05

#vmware_custom_attributes:
#- ResticSchedule1

platform_roles:
- linux-docker

# Variables for the blueprint
traefik_tag: v2.8.1
minio_tag: RELEASE.2022-08-02T23-59-16Z
mc_sub_domain: d-mc
minio_sub_domain: d-minio
cloudflare_email: infrastructure@barfoot.co.nz
minio_admin_access_key: administrator
minio_ldap_server: btdc01.barfoot.co.nz:636
cert:
cert_key:
ldap_consoleAdmin: 'CN=d-Minio Admins,OU=Minio,OU=Application,OU=Groups,OU=Production,OU=Location,DC=barfoot,DC=co,DC=nz'
ldap_minio_developers: 'CN=d-Minio Read Only,OU=Minio,OU=Application,OU=Groups,OU=Production,OU=Location,DC=barfoot,DC=co,DC=nz'
ldap_minio_serverinfo: 'CN=svc-vercheck,OU=Service Accounts,DC=barfoot,DC=co,DC=nz'
ldap_readwrite: 'CN=svc-d-minio-db,OU=Service Accounts,DC=barfoot,DC=co,DC=nz'
ldap_search_base: 'dc=barfoot,dc=co,dc=nz'

minio_export: /export
minio_main_for_sans: d-cluster

secrets:
- secret_mount: Production
  secret_path: Infrastructure/cloudflare/cert-manager
  secret_key: token
  engine_version: "2"
  variable_name: cloudflare_token
- secret_mount: Production
  secret_path: Infrastructure/minio/d-ap-minio-01.barfoot.co.nz/administrator
  secret_key: password
  engine_version: "2"
  variable_name: minio_admin_secret_key
- secret_mount: Production
  secret_path: Shared/active-directory/svc-minio-ldap
  secret_key: password
  engine_version: "2"
  variable_name: minio_ldap_user_password
- secret_mount: Production
  secret_path: Shared/active-directory/svc-minio-ldap
  secret_key: dn
  engine_version: "2"
  variable_name: minio_ldap_user_dn
- secret_mount: Production
  secret_path: Infrastructure/minio/d-ap-minio-01.barfoot.co.nz/vercheck
  secret_key: password
  engine_version: "2"
  variable_name: vercheck_secret_key
- secret_mount: Production
  secret_path: Infrastructure/minio/d-ap-minio-01.barfoot.co.nz/minio-db
  secret_key: password
  engine_version: "2"
  variable_name: minio_db_secret_key

git_apply:
- name: configs
  git_repo: git@github.com:BarfootThompson/awx-playbooks.git
  git_directory: blueprints/docker/minio-dev
  git_private_key: "{{ git_private_key }}"
  git_version: "{{ git_version }}"
  manifests_target_directory: ~/manifests_rendered
  manifests_recurse: Yes
  manifests_patterns: "*"
  apply_command:
- name: docker-compose
  # This is the git repo with your manifests. Use git protocol, not https
  git_repo: git@github.com:BarfootThompson/awx-playbooks.git
  # This is the directory inside the repo (without leading slash) where the manifests are
  git_directory: blueprints/docker/minio-dev
  # This is the private key for the git repo
  git_private_key: "{{ git_private_key }}"
  # This specifies branch/tag/commit hash to switch to after cloning
  git_version: "{{ git_version }}"
  # This is where redndered manifest tempaltes end up
  manifests_target_directory: ~/manifests_rendered
  # This specifies if we want to get manifests from subfolders too
  manifests_recurse: Yes
  # Search pattern for the manifests like *.yml
  manifests_patterns: docker-compose.yaml
  # This is the command executed on the target to apply the file
  apply_command: docker compose -f "{{ apply_target_path }}" up -d --force-recreate
- name: Wait for certificates
  git_repo: git@github.com:BarfootThompson/awx-playbooks.git
  git_directory: blueprints/docker/minio-dev
  git_private_key: "{{ git_private_key }}"
  git_version: "{{ git_version }}"
  manifests_target_directory: ~/manifests_rendered
  manifests_recurse: Yes
  manifests_patterns: wait-for-cert.ps1
  apply_command: pwsh "{{ apply_target_path }}"
- name: Init script
  git_repo: git@github.com:BarfootThompson/awx-playbooks.git
  git_directory: blueprints/docker/minio-dev
  git_private_key: "{{ git_private_key }}"
  git_version: "{{ git_version }}"
  manifests_target_directory: ~/manifests_rendered
  manifests_recurse: Yes
  manifests_patterns: init.sh
  apply_command: bash "{{ apply_target_path }}"

#mode: setup_backup
#mode: restore
mode: no_persistance
# used in setup_backup mode
#setup_backup:
#  #keep this value always
#  date: "{{ lookup('pipe','TZ=Pacific/Auckland date') }}"
#  #if you are running in the setup_backup mode you ususally need to sepcify path(s) to backup (comma-separate,no extra spaces)
#  backup_paths:
#  #you only need this if your repository suffix in minio is different from VM name (e.g. for vault)
#  repository_suffix:
#  #pathes to exclude from backup, space separated
#  exclusion_paths:
#  pre_backup_script:
#  post_backup_script:
# used in restore mode
#restic_snapshot_to_restore: latest
