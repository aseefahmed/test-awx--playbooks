vmware_vmname: s-db-api-pg-01
vmware_domain: barfoot.co.nz
vmware_network: Stage-DMZ-Backend
vmware_ip: 192.168.80.10
vmware_team: API
vmware_annotation: Postgres on docker for API team
vmware_template_name: template-ubuntu-2004-server-base
vmware_num_cpus: "2"
vmware_memory_gb: 8
vmware_disk_gb: "60"
vmware_folder: /Staging/Docker
vmware_datacentre: DC02
vmware_datastore: DC02-SSD-05

vmware_custom_attributes:
- Btstarcert

platform_roles:
- linux-docker

# Variables for the blueprint
traefik_tag: v2.8.1
postgres_image_tag: "13.2"
postgres_image_name: postgres
allowTLS: "true"
enforceTLS: "false"
cert_rotate_schedule: "0 0 * * SUN"

secrets:
- secret_mount: Production
  secret_path: Infrastructure/certs/barfoot.co.nz
  secret_key: cert
  engine_version: "2"
  variable_name: cert
- secret_mount: Production
  secret_path: Infrastructure/certs/barfoot.co.nz
  secret_key: key
  engine_version: "2"
  variable_name: cert_key
- secret_mount: Staging
  secret_path: Databases/Postgres/{{ vmware_vmname }}.barfoot.co.nz/postgres
  secret_key: password
  engine_version: "2"
  variable_name: postgres_password
- secret_mount: Staging
  secret_path: Databases/Postgres/{{ vmware_vmname }}.barfoot.co.nz/vercheck
  secret_key: password
  engine_version: "2"
  variable_name: vercheck_password
git_apply:
- name: configs
  git_repo: git@github.com:BarfootThompson/awx-playbooks.git
  git_directory: blueprints/docker/postgres
  git_private_key: "{{ git_private_key }}"
  git_version: "{{ git_version }}"
  manifests_target_directory: ~/manifests_rendered
  manifests_recurse: Yes
  manifests_patterns: "*"
  apply_command:
- name: Copy certificates
  git_repo: git@github.com:BarfootThompson/awx-playbooks.git
  git_directory: blueprints/docker/postgres
  git_private_key: "{{ git_private_key }}"
  git_version: "{{ git_version }}"
  manifests_target_directory: ~/manifests_rendered
  manifests_recurse: Yes
  manifests_patterns: copy-certs.sh
  apply_command: bash "{{ apply_target_path }}"
- name: init script
  git_repo: git@github.com:BarfootThompson/awx-playbooks.git
  git_directory: blueprints/docker/postgres
  git_private_key: "{{ git_private_key }}"
  git_version: "{{ git_version }}"
  manifests_target_directory: ~/manifests_rendered
  manifests_recurse: Yes
  manifests_patterns: init.ps1
  apply_command: pwsh "{{ apply_target_path }}"
- name: docker-compose
  # This is the git repo with your manifests. Use git protocol, not https
  git_repo: git@github.com:BarfootThompson/awx-playbooks.git
  # This is the directory inside the repo (without leading slash) where the manifests are
  git_directory: blueprints/docker/postgres
  # This is the private key for the git repo
  git_private_key: "{{ git_private_key }}"
  # This specifies branch/tag/commit hash to switch to after cloning
  git_version: "{{ git_version }}"
  # This is where redndered manifest tempaltes end up
  manifests_target_directory: ~/manifests_rendered
  # This specifies if we want to get manifests from subfolders too
  manifests_recurse: Yes
  # Search pattern for the manifests like *.yml
  manifests_patterns: docker-compose.yaml
  # This is the command executed on the target to apply the file
  apply_command: docker compose -f "{{ apply_target_path }}" up -d --force-recreate

#mode: setup_backup
#mode: no_persistance
mode: restore
# used in setup_backup mode
#setup_backup:
#  #keep this value always
#  date: "{{ lookup('pipe','TZ=Pacific/Auckland date') }}"
#  #if you are running in the setup_backup mode you ususally need to sepcify path(s) to backup (comma-separate,no extra spaces)
#  backup_paths: /mnt/docker/postgres/backup
#  # you only need this if your repository suffix in minio is different from VM name (e.g. for vault)
#  #repository_suffix:
#  # pathes to exclude from backup, space separated
#  #exclusion_paths:
#  #post_backup_script:
#  pre_backup_script: ~/manifests_rendered/backup/pre-backup.ps1
#  pre_backup_script_shell: pwsh
# used in restore mode
restic_snapshot_to_restore: latest
